{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { postStart } from \"src/app/effects/state/effect.action\";\nimport { deleteStart, loadPost, updateStart } from \"../state/post.action\";\nimport { getPosts } from \"../state/post.selector\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nconst _c0 = function (a1) {\n  return [\"/update\", a1];\n};\n\nfunction PostComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function PostComponent_tr_18_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const post_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.updateData(post_r7));\n    });\n    i0.ɵɵtext(12, \"Update \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\u00A0 \");\n    i0.ɵɵelementStart(14, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function PostComponent_tr_18_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const post_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onDelete(post_r7._id));\n    });\n    i0.ɵɵtext(15, \" Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\u00A0 \");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const post_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r7._id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(post_r7.email);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(post_r7.password);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, post_r7._id));\n  }\n}\n\nfunction PostComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostComponent_span_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostComponent_span_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostComponent_button_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r5.loginForm.invalid);\n  }\n}\n\nfunction PostComponent_button_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r6.loginForm.invalid);\n  }\n}\n\nexport class PostComponent {\n  constructor(store, route) {\n    this.store = store;\n    this.route = route;\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.pattern(\"^[0-9]{5}\")])\n    });\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadPost());\n    this.posts = this.store.select(getPosts);\n  }\n\n  submit() {\n    this.id = this.route.snapshot.paramMap.get(\"id\");\n\n    if (this.id) {\n      console.log(this.loginForm.value);\n    } else {\n      console.log(this.loginForm.value);\n      this.store.dispatch(postStart(this.loginForm.value));\n    }\n  }\n\n  oneUserData(id) {\n    console.log(id);\n  }\n\n  onDelete(id) {\n    this.store.dispatch(deleteStart({\n      userId: id\n    }));\n  }\n\n  updateData(post) {\n    console.log(post);\n    this.store.dispatch(updateStart(post));\n  }\n\n}\n\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  decls: 46,\n  vars: 10,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"userForm\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"\"], [\"type\", \"text\", \"placeholder\", \"Enter your email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Enter the password\", \"formControlName\", \"password\"], [3, \"disabled\", 4, \"ngIf\"], [3, \"routerLink\", \"click\"], [3, \"click\"], [3, \"disabled\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"h3\");\n      i0.ɵɵtext(3, \"post list\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\")(5, \"table\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \"\\u00A0\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\u00A0\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\u00A0\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Action\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, PostComponent_tr_18_Template, 17, 6, \"tr\", 0);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\")(21, \"div\", 1)(22, \"div\")(23, \"h3\");\n      i0.ɵɵtext(24, \"Add user\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_25_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(26, \"div\")(27, \"label\", 3);\n      i0.ɵɵtext(28, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\");\n      i0.ɵɵtemplate(31, PostComponent_span_31_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\");\n      i0.ɵɵtemplate(33, PostComponent_span_33_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\")(35, \"label\");\n      i0.ɵɵtext(36, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\");\n      i0.ɵɵtemplate(39, PostComponent_span_39_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\");\n      i0.ɵɵtemplate(41, PostComponent_span_41_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\");\n      i0.ɵɵtemplate(43, PostComponent_button_43_Template, 2, 1, \"button\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"div\");\n      i0.ɵɵtemplate(45, PostComponent_button_45_Template, 2, 1, \"button\", 7);\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 8, ctx.posts));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.valid) && !((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_3_0.errors) && ((tmp_3_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_3_0.dirty));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.valid) && !((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_5_0.errors) && ((tmp_5_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_5_0.dirty));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.updatebutton);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.updatebutton);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3N0LmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","postStart","deleteStart","loadPost","updateStart","getPosts","i0","PostComponent","constructor","store","route","loginForm","email","required","password","pattern","ngOnInit","dispatch","posts","select","submit","id","snapshot","paramMap","get","console","log","value","oneUserData","onDelete","userId","updateData","post","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/asplap1973/ngrx/FrontEnd/src/app/posts/post/post.component.ts","/home/asplap1973/ngrx/FrontEnd/src/app/posts/post/post.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { AppState } from \"src/app/app.state\";\nimport { postStart } from \"src/app/effects/state/effect.action\";\nimport { Post } from \"src/app/models/post.model\";\nimport { PostServiceService } from \"../service/post-service.service\";\nimport { deleteStart, loadPost, updateStart } from \"../state/post.action\";\nimport { getPosts } from \"../state/post.selector\";\n\n@Component({\n  selector: \"app-post\",\n  templateUrl: \"./post.component.html\",\n  styleUrls: [\"./post.component.scss\"],\n})\nexport class PostComponent implements OnInit {\n  posts!: Observable<Post[]>;\n  data: any;\n  loginForm!: FormGroup;\n  oneUserD!: Observable<any>\n  id: any;\n  constructor(\n    private store: Store<AppState>,\n    private route: ActivatedRoute\n  ) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9]{5}\"),\n      ]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(loadPost());\n    this.posts = this.store.select(getPosts);\n  }\n\n  submit(){\n    this.id = this.route.snapshot.paramMap.get(\"id\");\n    if (this.id) {\n      console.log(this.loginForm.value);\n    \n    } else {\n      console.log(this.loginForm.value);\n      this.store.dispatch(postStart(this.loginForm.value));\n    }\n  }\n  oneUserData(id : any) {\n    console.log(id);\n  }\n\n  onDelete(id : any){\n    this.store.dispatch(deleteStart({userId : id}))\n  }\n\n  updateData(post : any){\n    console.log(post);\n    this.store.dispatch(updateStart(post));\n  }\n}\n","<div>\n  <div>\n    <h3>post list</h3>\n  </div>\n  <div>\n    <table>\n      <tr>\n        <th>ID</th>&nbsp;&nbsp;&nbsp;\n        <th>Email</th>&nbsp;&nbsp;&nbsp;\n        <th>Password</th>&nbsp;&nbsp;&nbsp;\n        <th>Action</th>\n      </tr>\n      <tr *ngFor=\"let post of posts | async\">\n        <td>{{post._id}}</td>&nbsp;&nbsp;&nbsp;\n        <td>{{post.email}}</td>&nbsp;&nbsp;&nbsp;\n        <td>{{post.password}}</td>&nbsp;&nbsp;&nbsp;\n        <td>\n          <button [routerLink]=\"['/update',post._id]\" (click)=\"updateData(post)\">Update </button>&nbsp;\n          <button (click)=\"onDelete(post._id)\"> Delete </button>&nbsp;\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <div class=\"userForm\">\n      <div>\n        <h3>Add user</h3>\n      </div>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n        <div>\n          <label for=\"\">Email</label>\n          <input type=\"text\" placeholder=\"Enter your email\" formControlName=\"email\">\n        </div>\n        <div>\n          <span *ngIf=\"loginForm.get('email')?.valid && !loginForm.get('email')?.touched\">Invalid email</span>\n        </div>\n        <div>\n          <span *ngIf=\"loginForm.get('email')?.errors && loginForm.get('email')?.dirty\">Email is required</span>\n        </div>\n        <div>\n          <label>Password</label>\n          <input type=\"password\" placeholder=\"Enter the password\" formControlName=\"password\">\n        </div>\n        <div>\n          <span *ngIf=\"loginForm.get('password')?.valid && !loginForm.get('password')?.touched\">Invalid password</span>\n        </div>\n        <div>\n          <span *ngIf=\"loginForm.get('password')?.errors && loginForm.get('password')?.dirty\">password is required</span>\n        </div>\n        <div>\n          <button [disabled]=\"loginForm.invalid\" *ngIf=\"!updatebutton\">Submit</button>\n        </div>\n        <div>\n          <button [disabled]=\"loginForm.invalid\" *ngIf=\"updatebutton\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module"}