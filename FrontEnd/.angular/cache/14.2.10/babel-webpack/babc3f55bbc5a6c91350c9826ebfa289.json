{"ast":null,"code":"import { compose, ScannedActionsSubject, Store, createAction, StoreRootModule, StoreFeatureModule } from '@ngrx/store';\nimport { merge, Observable, Subject, defer, Notification, pipe, of } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take, concatMap, finalize, withLatestFrom } from 'rxjs/operators';\nimport { Injectable, Inject, InjectionToken, ErrorHandler, NgModule, Optional, Injector, SkipSelf, Self } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'rxjs';\nimport * as ɵngcc2 from '@ngrx/store';\nconst DEFAULT_EFFECT_CONFIG = {\n  dispatch: true,\n  useEffectsErrorHandler: true\n};\nconst CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n/**\n * @description\n * Creates an effect from an `Observable` and an `EffectConfig`.\n *\n * @param source A function which returns an `Observable`.\n * @param config A `Partial<EffectConfig>` to configure the effect.  By default, `dispatch` is true and `useEffectsErrorHandler` is true.\n * @returns If `EffectConfig`#`dispatch` is true, returns `Observable<Action>`.  Else, returns `Observable<unknown>`.\n *\n * @usageNotes\n *\n * ** Mapping to a different action **\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(FeatureActions.actionOne),\n *     map(() => FeatureActions.actionTwo())\n *   )\n * );\n * ```\n *\n *  ** Non-dispatching effects **\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(FeatureActions.actionOne),\n *     tap(() => console.log('Action One Dispatched'))\n *   ),\n *   { dispatch: false }\n *   // FeatureActions.actionOne is not dispatched\n * );\n * ```\n */\n\nfunction createEffect(source, config) {\n  const effect = source();\n  const value = Object.assign(Object.assign({}, DEFAULT_EFFECT_CONFIG), config);\n  Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n    value\n  });\n  return effect;\n}\n\nfunction getCreateEffectMetadata(instance) {\n  const propertyNames = Object.getOwnPropertyNames(instance);\n  const metadata = propertyNames.filter(propertyName => {\n    if (instance[propertyName] && instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n      // If the property type has overridden `hasOwnProperty` we need to ensure\n      // that the metadata is valid (containing a `dispatch`property)\n      // https://github.com/ngrx/platform/issues/2975\n      const property = instance[propertyName];\n      return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n    }\n\n    return false;\n  }).map(propertyName => {\n    const metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n    return Object.assign({\n      propertyName\n    }, metaData);\n  });\n  return metadata;\n}\n\nfunction getSourceForInstance(instance) {\n  return Object.getPrototypeOf(instance);\n}\n\nconst METADATA_KEY = '__@ngrx/effects__';\n/**\n * @deprecated The Effect decorator (`@Effect`) is deprecated in favor for the `createEffect` method.\n * See the docs for more info {@link https://ngrx.io/guide/migration/v11#the-effect-decorator}\n */\n\nfunction Effect(config = {}) {\n  return function (target, propertyName) {\n    const metadata = Object.assign(Object.assign(Object.assign({}, DEFAULT_EFFECT_CONFIG), config), {\n      // Overrides any defaults if values are provided\n      propertyName\n    });\n    addEffectMetadataEntry(target, metadata);\n  };\n}\n\nfunction getEffectDecoratorMetadata(instance) {\n  const effectsDecorators = compose(getEffectMetadataEntries, getSourceForInstance)(instance);\n  return effectsDecorators;\n}\n/**\n * Type guard to detemine whether METADATA_KEY is already present on the Class\n * constructor\n */\n\n\nfunction hasMetadataEntries(sourceProto) {\n  return sourceProto.constructor.hasOwnProperty(METADATA_KEY);\n}\n/** Add Effect Metadata to the Effect Class constructor under specific key */\n\n\nfunction addEffectMetadataEntry(sourceProto, metadata) {\n  if (hasMetadataEntries(sourceProto)) {\n    sourceProto.constructor[METADATA_KEY].push(metadata);\n  } else {\n    Object.defineProperty(sourceProto.constructor, METADATA_KEY, {\n      value: [metadata]\n    });\n  }\n}\n\nfunction getEffectMetadataEntries(sourceProto) {\n  return hasMetadataEntries(sourceProto) ? sourceProto.constructor[METADATA_KEY] : [];\n}\n\nfunction getEffectsMetadata(instance) {\n  return getSourceMetadata(instance).reduce((acc, {\n    propertyName,\n    dispatch,\n    useEffectsErrorHandler\n  }) => {\n    acc[propertyName] = {\n      dispatch,\n      useEffectsErrorHandler\n    };\n    return acc;\n  }, {});\n}\n\nfunction getSourceMetadata(instance) {\n  const effects = [getEffectDecoratorMetadata, getCreateEffectMetadata];\n  return effects.reduce((sources, source) => sources.concat(source(instance)), []);\n}\n\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n  const sourceName = getSourceForInstance(sourceInstance).constructor.name;\n  const observables$ = getSourceMetadata(sourceInstance).map(({\n    propertyName,\n    dispatch,\n    useEffectsErrorHandler\n  }) => {\n    const observable$ = typeof sourceInstance[propertyName] === 'function' ? sourceInstance[propertyName]() : sourceInstance[propertyName];\n    const effectAction$ = useEffectsErrorHandler ? effectsErrorHandler(observable$, globalErrorHandler) : observable$;\n\n    if (dispatch === false) {\n      return effectAction$.pipe(ignoreElements());\n    }\n\n    const materialized$ = effectAction$.pipe(materialize());\n    return materialized$.pipe(map(notification => ({\n      effect: sourceInstance[propertyName],\n      notification,\n      propertyName,\n      sourceName,\n      sourceInstance\n    })));\n  });\n  return merge(...observables$);\n}\n\nconst MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\n\nfunction defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS) {\n  return observable$.pipe(catchError(error => {\n    if (errorHandler) errorHandler.handleError(error);\n\n    if (retryAttemptLeft <= 1) {\n      return observable$; // last attempt\n    } // Return observable that produces this particular effect\n\n\n    return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n  }));\n}\n\nclass Actions extends Observable {\n  constructor(source) {\n    super();\n\n    if (source) {\n      this.source = source;\n    }\n  }\n\n  lift(operator) {\n    const observable = new Actions();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n}\n\nActions.ɵfac = function Actions_Factory(t) {\n  return new (t || Actions)(ɵngcc0.ɵɵinject(ScannedActionsSubject));\n};\n\nActions.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: Actions,\n  factory: Actions.ɵfac\n});\n/** @nocollapse */\n\nActions.ctorParameters = () => [{\n  type: Observable,\n  decorators: [{\n    type: Inject,\n    args: [ScannedActionsSubject]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Actions, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.Observable,\n      decorators: [{\n        type: Inject,\n        args: [ScannedActionsSubject]\n      }]\n    }];\n  }, null);\n})();\n\nfunction ofType(...allowedTypes) {\n  return filter(action => allowedTypes.some(typeOrActionCreator => {\n    if (typeof typeOrActionCreator === 'string') {\n      // Comparing the string to type\n      return typeOrActionCreator === action.type;\n    } // We are filtering by ActionCreator\n\n\n    return typeOrActionCreator.type === action.type;\n  }));\n}\n\nfunction reportInvalidActions(output, reporter) {\n  if (output.notification.kind === 'N') {\n    const action = output.notification.value;\n    const isInvalidAction = !isAction(action);\n\n    if (isInvalidAction) {\n      reporter.handleError(new Error(`Effect ${getEffectName(output)} dispatched an invalid action: ${stringify(action)}`));\n    }\n  }\n}\n\nfunction isAction(action) {\n  return typeof action !== 'function' && action && action.type && typeof action.type === 'string';\n}\n\nfunction getEffectName({\n  propertyName,\n  sourceInstance,\n  sourceName\n}) {\n  const isMethod = typeof sourceInstance[propertyName] === 'function';\n  return `\"${sourceName}.${String(propertyName)}${isMethod ? '()' : ''}\"`;\n}\n\nfunction stringify(action) {\n  try {\n    return JSON.stringify(action);\n  } catch (_a) {\n    return action;\n  }\n}\n\nconst onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\n\nfunction isOnIdentifyEffects(instance) {\n  return isFunction(instance, onIdentifyEffectsKey);\n}\n\nconst onRunEffectsKey = 'ngrxOnRunEffects';\n\nfunction isOnRunEffects(instance) {\n  return isFunction(instance, onRunEffectsKey);\n}\n\nconst onInitEffects = 'ngrxOnInitEffects';\n\nfunction isOnInitEffects(instance) {\n  return isFunction(instance, onInitEffects);\n}\n\nfunction isFunction(instance, functionName) {\n  return instance && functionName in instance && typeof instance[functionName] === 'function';\n}\n\nconst _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\n\nconst USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\n\nconst _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\n\nconst ROOT_EFFECTS = new InjectionToken('@ngrx/effects Root Effects');\n\nconst _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\n\nconst FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Feature Effects');\nconst EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler');\n\nclass EffectSources extends Subject {\n  constructor(errorHandler, effectsErrorHandler) {\n    super();\n    this.errorHandler = errorHandler;\n    this.effectsErrorHandler = effectsErrorHandler;\n  }\n\n  addEffects(effectSourceInstance) {\n    this.next(effectSourceInstance);\n  }\n  /**\n   * @internal\n   */\n\n\n  toActions() {\n    return this.pipe(groupBy(getSourceForInstance), mergeMap(source$ => {\n      return source$.pipe(groupBy(effectsInstance));\n    }), mergeMap(source$ => {\n      const effect$ = source$.pipe(exhaustMap(sourceInstance => {\n        return resolveEffectSource(this.errorHandler, this.effectsErrorHandler)(sourceInstance);\n      }), map(output => {\n        reportInvalidActions(output, this.errorHandler);\n        return output.notification;\n      }), filter(notification => notification.kind === 'N' && notification.value != null), dematerialize()); // start the stream with an INIT action\n      // do this only for the first Effect instance\n\n      const init$ = source$.pipe(take(1), filter(isOnInitEffects), map(instance => instance.ngrxOnInitEffects()));\n      return merge(effect$, init$);\n    }));\n  }\n\n}\n\nEffectSources.ɵfac = function EffectSources_Factory(t) {\n  return new (t || EffectSources)(ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler), ɵngcc0.ɵɵinject(EFFECTS_ERROR_HANDLER));\n};\n\nEffectSources.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: EffectSources,\n  factory: EffectSources.ɵfac\n});\n/** @nocollapse */\n\nEffectSources.ctorParameters = () => [{\n  type: ErrorHandler\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [EFFECTS_ERROR_HANDLER]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectSources, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.ErrorHandler\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [EFFECTS_ERROR_HANDLER]\n      }]\n    }];\n  }, null);\n})();\n\nfunction effectsInstance(sourceInstance) {\n  if (isOnIdentifyEffects(sourceInstance)) {\n    return sourceInstance.ngrxOnIdentifyEffects();\n  }\n\n  return '';\n}\n\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n  return sourceInstance => {\n    const mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n\n    if (isOnRunEffects(sourceInstance)) {\n      return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n    }\n\n    return mergedEffects$;\n  };\n}\n\nclass EffectsRunner {\n  constructor(effectSources, store) {\n    this.effectSources = effectSources;\n    this.store = store;\n    this.effectsSubscription = null;\n  }\n\n  start() {\n    if (!this.effectsSubscription) {\n      this.effectsSubscription = this.effectSources.toActions().subscribe(this.store);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.effectsSubscription) {\n      this.effectsSubscription.unsubscribe();\n      this.effectsSubscription = null;\n    }\n  }\n\n}\n\nEffectsRunner.ɵfac = function EffectsRunner_Factory(t) {\n  return new (t || EffectsRunner)(ɵngcc0.ɵɵinject(EffectSources), ɵngcc0.ɵɵinject(ɵngcc2.Store));\n};\n\nEffectsRunner.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: EffectsRunner,\n  factory: EffectsRunner.ɵfac\n});\n/** @nocollapse */\n\nEffectsRunner.ctorParameters = () => [{\n  type: EffectSources\n}, {\n  type: Store\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsRunner, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EffectSources\n    }, {\n      type: ɵngcc2.Store\n    }];\n  }, null);\n})();\n\nconst ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nconst rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\n\nclass EffectsRootModule {\n  constructor(sources, runner, store, rootEffects, storeRootModule, storeFeatureModule, guard) {\n    this.sources = sources;\n    runner.start();\n    rootEffects.forEach(effectSourceInstance => sources.addEffects(effectSourceInstance));\n    store.dispatch({\n      type: ROOT_EFFECTS_INIT\n    });\n  }\n\n  addEffects(effectSourceInstance) {\n    this.sources.addEffects(effectSourceInstance);\n  }\n\n}\n\nEffectsRootModule.ɵfac = function EffectsRootModule_Factory(t) {\n  return new (t || EffectsRootModule)(ɵngcc0.ɵɵinject(EffectSources), ɵngcc0.ɵɵinject(EffectsRunner), ɵngcc0.ɵɵinject(ɵngcc2.Store), ɵngcc0.ɵɵinject(ROOT_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc2.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc2.StoreFeatureModule, 8), ɵngcc0.ɵɵinject(_ROOT_EFFECTS_GUARD, 8));\n};\n\nEffectsRootModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: EffectsRootModule\n});\nEffectsRootModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n/** @nocollapse */\n\nEffectsRootModule.ctorParameters = () => [{\n  type: EffectSources\n}, {\n  type: EffectsRunner\n}, {\n  type: Store\n}, {\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [ROOT_EFFECTS]\n  }]\n}, {\n  type: StoreRootModule,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: StoreFeatureModule,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [_ROOT_EFFECTS_GUARD]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsRootModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: EffectSources\n    }, {\n      type: EffectsRunner\n    }, {\n      type: ɵngcc2.Store\n    }, {\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [ROOT_EFFECTS]\n      }]\n    }, {\n      type: ɵngcc2.StoreRootModule,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc2.StoreFeatureModule,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ROOT_EFFECTS_GUARD]\n      }]\n    }];\n  }, null);\n})();\n\nclass EffectsFeatureModule {\n  constructor(root, effectSourceGroups, storeRootModule, storeFeatureModule) {\n    effectSourceGroups.forEach(group => group.forEach(effectSourceInstance => root.addEffects(effectSourceInstance)));\n  }\n\n}\n\nEffectsFeatureModule.ɵfac = function EffectsFeatureModule_Factory(t) {\n  return new (t || EffectsFeatureModule)(ɵngcc0.ɵɵinject(EffectsRootModule), ɵngcc0.ɵɵinject(FEATURE_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc2.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc2.StoreFeatureModule, 8));\n};\n\nEffectsFeatureModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: EffectsFeatureModule\n});\nEffectsFeatureModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n/** @nocollapse */\n\nEffectsFeatureModule.ctorParameters = () => [{\n  type: EffectsRootModule\n}, {\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [FEATURE_EFFECTS]\n  }]\n}, {\n  type: StoreRootModule,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: StoreFeatureModule,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsFeatureModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: EffectsRootModule\n    }, {\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [FEATURE_EFFECTS]\n      }]\n    }, {\n      type: ɵngcc2.StoreRootModule,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc2.StoreFeatureModule,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nclass EffectsModule {\n  static forFeature(featureEffects = []) {\n    return {\n      ngModule: EffectsFeatureModule,\n      providers: [featureEffects, {\n        provide: _FEATURE_EFFECTS,\n        multi: true,\n        useValue: featureEffects\n      }, {\n        provide: USER_PROVIDED_EFFECTS,\n        multi: true,\n        useValue: []\n      }, {\n        provide: FEATURE_EFFECTS,\n        multi: true,\n        useFactory: createEffects,\n        deps: [Injector, _FEATURE_EFFECTS, USER_PROVIDED_EFFECTS]\n      }]\n    };\n  }\n\n  static forRoot(rootEffects = []) {\n    return {\n      ngModule: EffectsRootModule,\n      providers: [{\n        provide: EFFECTS_ERROR_HANDLER,\n        useValue: defaultEffectsErrorHandler\n      }, EffectsRunner, EffectSources, Actions, rootEffects, {\n        provide: _ROOT_EFFECTS,\n        useValue: [rootEffects]\n      }, {\n        provide: _ROOT_EFFECTS_GUARD,\n        useFactory: _provideForRootGuard,\n        deps: [[EffectsRunner, new Optional(), new SkipSelf()], [_ROOT_EFFECTS, new Self()]]\n      }, {\n        provide: USER_PROVIDED_EFFECTS,\n        multi: true,\n        useValue: []\n      }, {\n        provide: ROOT_EFFECTS,\n        useFactory: createEffects,\n        deps: [Injector, _ROOT_EFFECTS, USER_PROVIDED_EFFECTS]\n      }]\n    };\n  }\n\n}\n\nEffectsModule.ɵfac = function EffectsModule_Factory(t) {\n  return new (t || EffectsModule)();\n};\n\nEffectsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: EffectsModule\n});\nEffectsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\nfunction createEffects(injector, effectGroups, userProvidedEffectGroups) {\n  const mergedEffects = [];\n\n  for (const effectGroup of effectGroups) {\n    mergedEffects.push(...effectGroup);\n  }\n\n  for (const userProvidedEffectGroup of userProvidedEffectGroups) {\n    mergedEffects.push(...userProvidedEffectGroup);\n  }\n\n  return createEffectInstances(injector, mergedEffects);\n}\n\nfunction createEffectInstances(injector, effects) {\n  return effects.map(effect => injector.get(effect));\n}\n\nfunction _provideForRootGuard(runner, rootEffects) {\n  // check whether any effects are actually passed\n  const hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n\n  if (hasEffects && runner) {\n    throw new TypeError(`EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.`);\n  }\n\n  return 'guarded';\n}\n\nfunction act(\n/** Allow to take either config object or project/error functions */\nconfigOrProject, errorFn) {\n  const {\n    project,\n    error,\n    complete,\n    operator,\n    unsubscribe\n  } = typeof configOrProject === 'function' ? {\n    project: configOrProject,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    error: errorFn,\n    operator: concatMap,\n    complete: undefined,\n    unsubscribe: undefined\n  } : Object.assign(Object.assign({}, configOrProject), {\n    operator: configOrProject.operator || concatMap\n  });\n  return source => defer(() => {\n    const subject = new Subject();\n    return merge(source.pipe(operator((input, index) => defer(() => {\n      let completed = false;\n      let errored = false;\n      let projectedCount = 0;\n      return project(input, index).pipe(materialize(), map(notification => {\n        switch (notification.kind) {\n          case 'E':\n            errored = true;\n            return new Notification('N', error(notification.error, input));\n\n          case 'C':\n            completed = true;\n            return complete ? new Notification('N', complete(projectedCount, input)) : undefined;\n\n          default:\n            ++projectedCount;\n            return notification;\n        }\n      }), filter(n => n != null), dematerialize(), finalize(() => {\n        if (!completed && !errored && unsubscribe) {\n          subject.next(unsubscribe(projectedCount, input));\n        }\n      }));\n    }))), subject);\n  });\n}\n/**\n * 'concatLatestFrom' combines the source value\n * and the last available value from a lazily evaluated Observable\n * in a new array\n */\n\n\nfunction concatLatestFrom(observablesFactory) {\n  return pipe(concatMap(value => {\n    const observables = observablesFactory(value);\n    const observablesAsArray = Array.isArray(observables) ? observables : [observables];\n    return of(value).pipe(withLatestFrom(...observablesAsArray));\n  }));\n}\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Actions, EFFECTS_ERROR_HANDLER, Effect, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, act, concatLatestFrom, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, rootEffectsInit, getSourceMetadata as ɵa, createEffects as ɵb, _provideForRootGuard as ɵc, _ROOT_EFFECTS_GUARD as ɵd, _ROOT_EFFECTS as ɵe, ROOT_EFFECTS as ɵf, _FEATURE_EFFECTS as ɵg, FEATURE_EFFECTS as ɵh };","map":{"version":3,"names":["compose","ScannedActionsSubject","Store","createAction","StoreRootModule","StoreFeatureModule","merge","Observable","Subject","defer","Notification","pipe","of","ignoreElements","materialize","map","catchError","filter","groupBy","mergeMap","exhaustMap","dematerialize","take","concatMap","finalize","withLatestFrom","Injectable","Inject","InjectionToken","ErrorHandler","NgModule","Optional","Injector","SkipSelf","Self","ɵngcc0","ɵngcc1","ɵngcc2","DEFAULT_EFFECT_CONFIG","dispatch","useEffectsErrorHandler","CREATE_EFFECT_METADATA_KEY","createEffect","source","config","effect","value","Object","assign","defineProperty","getCreateEffectMetadata","instance","propertyNames","getOwnPropertyNames","metadata","propertyName","hasOwnProperty","property","metaData","getSourceForInstance","getPrototypeOf","METADATA_KEY","Effect","target","addEffectMetadataEntry","getEffectDecoratorMetadata","effectsDecorators","getEffectMetadataEntries","hasMetadataEntries","sourceProto","constructor","push","getEffectsMetadata","getSourceMetadata","reduce","acc","effects","sources","concat","mergeEffects","sourceInstance","globalErrorHandler","effectsErrorHandler","sourceName","name","observables$","observable$","effectAction$","materialized$","notification","MAX_NUMBER_OF_RETRY_ATTEMPTS","defaultEffectsErrorHandler","errorHandler","retryAttemptLeft","error","handleError","Actions","lift","operator","observable","ɵfac","Actions_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","type","decorators","args","ngDevMode","ɵsetClassMetadata","ofType","allowedTypes","action","some","typeOrActionCreator","reportInvalidActions","output","reporter","kind","isInvalidAction","isAction","Error","getEffectName","stringify","isMethod","String","JSON","_a","onIdentifyEffectsKey","isOnIdentifyEffects","isFunction","onRunEffectsKey","isOnRunEffects","onInitEffects","isOnInitEffects","functionName","_ROOT_EFFECTS_GUARD","USER_PROVIDED_EFFECTS","_ROOT_EFFECTS","ROOT_EFFECTS","_FEATURE_EFFECTS","FEATURE_EFFECTS","EFFECTS_ERROR_HANDLER","EffectSources","addEffects","effectSourceInstance","next","toActions","source$","effectsInstance","effect$","resolveEffectSource","init$","ngrxOnInitEffects","EffectSources_Factory","undefined","ngrxOnIdentifyEffects","mergedEffects$","ngrxOnRunEffects","EffectsRunner","effectSources","store","effectsSubscription","start","subscribe","ngOnDestroy","unsubscribe","EffectsRunner_Factory","ROOT_EFFECTS_INIT","rootEffectsInit","EffectsRootModule","runner","rootEffects","storeRootModule","storeFeatureModule","guard","forEach","EffectsRootModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","Array","EffectsFeatureModule","root","effectSourceGroups","group","EffectsFeatureModule_Factory","EffectsModule","forFeature","featureEffects","ngModule","providers","provide","multi","useValue","useFactory","createEffects","deps","forRoot","_provideForRootGuard","EffectsModule_Factory","injector","effectGroups","userProvidedEffectGroups","mergedEffects","effectGroup","userProvidedEffectGroup","createEffectInstances","get","hasEffects","length","TypeError","act","configOrProject","errorFn","project","complete","subject","input","index","completed","errored","projectedCount","n","concatLatestFrom","observablesFactory","observables","observablesAsArray","isArray","ɵa","ɵb","ɵc","ɵd","ɵe","ɵf","ɵg","ɵh"],"sources":["/home/asplap1973/ngrx/FrontEnd/node_modules/@ngrx/effects/__ivy_ngcc__/fesm2015/ngrx-effects.js"],"sourcesContent":["import { compose, ScannedActionsSubject, Store, createAction, StoreRootModule, StoreFeatureModule } from '@ngrx/store';\nimport { merge, Observable, Subject, defer, Notification, pipe, of } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take, concatMap, finalize, withLatestFrom } from 'rxjs/operators';\nimport { Injectable, Inject, InjectionToken, ErrorHandler, NgModule, Optional, Injector, SkipSelf, Self } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'rxjs';\nimport * as ɵngcc2 from '@ngrx/store';\nconst DEFAULT_EFFECT_CONFIG = {\n    dispatch: true,\n    useEffectsErrorHandler: true,\n};\nconst CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\n/**\n * @description\n * Creates an effect from an `Observable` and an `EffectConfig`.\n *\n * @param source A function which returns an `Observable`.\n * @param config A `Partial<EffectConfig>` to configure the effect.  By default, `dispatch` is true and `useEffectsErrorHandler` is true.\n * @returns If `EffectConfig`#`dispatch` is true, returns `Observable<Action>`.  Else, returns `Observable<unknown>`.\n *\n * @usageNotes\n *\n * ** Mapping to a different action **\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(FeatureActions.actionOne),\n *     map(() => FeatureActions.actionTwo())\n *   )\n * );\n * ```\n *\n *  ** Non-dispatching effects **\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(FeatureActions.actionOne),\n *     tap(() => console.log('Action One Dispatched'))\n *   ),\n *   { dispatch: false }\n *   // FeatureActions.actionOne is not dispatched\n * );\n * ```\n */\nfunction createEffect(source, config) {\n    const effect = source();\n    const value = Object.assign(Object.assign({}, DEFAULT_EFFECT_CONFIG), config);\n    Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n        value,\n    });\n    return effect;\n}\nfunction getCreateEffectMetadata(instance) {\n    const propertyNames = Object.getOwnPropertyNames(instance);\n    const metadata = propertyNames\n        .filter((propertyName) => {\n        if (instance[propertyName] &&\n            instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n            // If the property type has overridden `hasOwnProperty` we need to ensure\n            // that the metadata is valid (containing a `dispatch`property)\n            // https://github.com/ngrx/platform/issues/2975\n            const property = instance[propertyName];\n            return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n        }\n        return false;\n    })\n        .map((propertyName) => {\n        const metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n        return Object.assign({ propertyName }, metaData);\n    });\n    return metadata;\n}\n\nfunction getSourceForInstance(instance) {\n    return Object.getPrototypeOf(instance);\n}\n\nconst METADATA_KEY = '__@ngrx/effects__';\n/**\n * @deprecated The Effect decorator (`@Effect`) is deprecated in favor for the `createEffect` method.\n * See the docs for more info {@link https://ngrx.io/guide/migration/v11#the-effect-decorator}\n */\nfunction Effect(config = {}) {\n    return function (target, propertyName) {\n        const metadata = Object.assign(Object.assign(Object.assign({}, DEFAULT_EFFECT_CONFIG), config), { // Overrides any defaults if values are provided\n            propertyName });\n        addEffectMetadataEntry(target, metadata);\n    };\n}\nfunction getEffectDecoratorMetadata(instance) {\n    const effectsDecorators = compose(getEffectMetadataEntries, getSourceForInstance)(instance);\n    return effectsDecorators;\n}\n/**\n * Type guard to detemine whether METADATA_KEY is already present on the Class\n * constructor\n */\nfunction hasMetadataEntries(sourceProto) {\n    return sourceProto.constructor.hasOwnProperty(METADATA_KEY);\n}\n/** Add Effect Metadata to the Effect Class constructor under specific key */\nfunction addEffectMetadataEntry(sourceProto, metadata) {\n    if (hasMetadataEntries(sourceProto)) {\n        sourceProto.constructor[METADATA_KEY].push(metadata);\n    }\n    else {\n        Object.defineProperty(sourceProto.constructor, METADATA_KEY, {\n            value: [metadata],\n        });\n    }\n}\nfunction getEffectMetadataEntries(sourceProto) {\n    return hasMetadataEntries(sourceProto)\n        ? sourceProto.constructor[METADATA_KEY]\n        : [];\n}\n\nfunction getEffectsMetadata(instance) {\n    return getSourceMetadata(instance).reduce((acc, { propertyName, dispatch, useEffectsErrorHandler }) => {\n        acc[propertyName] = { dispatch, useEffectsErrorHandler };\n        return acc;\n    }, {});\n}\nfunction getSourceMetadata(instance) {\n    const effects = [\n        getEffectDecoratorMetadata,\n        getCreateEffectMetadata,\n    ];\n    return effects.reduce((sources, source) => sources.concat(source(instance)), []);\n}\n\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n    const sourceName = getSourceForInstance(sourceInstance).constructor.name;\n    const observables$ = getSourceMetadata(sourceInstance).map(({ propertyName, dispatch, useEffectsErrorHandler, }) => {\n        const observable$ = typeof sourceInstance[propertyName] === 'function'\n            ? sourceInstance[propertyName]()\n            : sourceInstance[propertyName];\n        const effectAction$ = useEffectsErrorHandler\n            ? effectsErrorHandler(observable$, globalErrorHandler)\n            : observable$;\n        if (dispatch === false) {\n            return effectAction$.pipe(ignoreElements());\n        }\n        const materialized$ = effectAction$.pipe(materialize());\n        return materialized$.pipe(map((notification) => ({\n            effect: sourceInstance[propertyName],\n            notification,\n            propertyName,\n            sourceName,\n            sourceInstance,\n        })));\n    });\n    return merge(...observables$);\n}\n\nconst MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\nfunction defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS) {\n    return observable$.pipe(catchError((error) => {\n        if (errorHandler)\n            errorHandler.handleError(error);\n        if (retryAttemptLeft <= 1) {\n            return observable$; // last attempt\n        }\n        // Return observable that produces this particular effect\n        return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n    }));\n}\n\nclass Actions extends Observable {\n    constructor(source) {\n        super();\n        if (source) {\n            this.source = source;\n        }\n    }\n    lift(operator) {\n        const observable = new Actions();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n}\nActions.ɵfac = function Actions_Factory(t) { return new (t || Actions)(ɵngcc0.ɵɵinject(ScannedActionsSubject)); };\nActions.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Actions, factory: Actions.ɵfac });\n/** @nocollapse */\nActions.ctorParameters = () => [\n    { type: Observable, decorators: [{ type: Inject, args: [ScannedActionsSubject,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Actions, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.Observable, decorators: [{\n                type: Inject,\n                args: [ScannedActionsSubject]\n            }] }]; }, null); })();\nfunction ofType(...allowedTypes) {\n    return filter((action) => allowedTypes.some((typeOrActionCreator) => {\n        if (typeof typeOrActionCreator === 'string') {\n            // Comparing the string to type\n            return typeOrActionCreator === action.type;\n        }\n        // We are filtering by ActionCreator\n        return typeOrActionCreator.type === action.type;\n    }));\n}\n\nfunction reportInvalidActions(output, reporter) {\n    if (output.notification.kind === 'N') {\n        const action = output.notification.value;\n        const isInvalidAction = !isAction(action);\n        if (isInvalidAction) {\n            reporter.handleError(new Error(`Effect ${getEffectName(output)} dispatched an invalid action: ${stringify(action)}`));\n        }\n    }\n}\nfunction isAction(action) {\n    return (typeof action !== 'function' &&\n        action &&\n        action.type &&\n        typeof action.type === 'string');\n}\nfunction getEffectName({ propertyName, sourceInstance, sourceName, }) {\n    const isMethod = typeof sourceInstance[propertyName] === 'function';\n    return `\"${sourceName}.${String(propertyName)}${isMethod ? '()' : ''}\"`;\n}\nfunction stringify(action) {\n    try {\n        return JSON.stringify(action);\n    }\n    catch (_a) {\n        return action;\n    }\n}\n\nconst onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\nfunction isOnIdentifyEffects(instance) {\n    return isFunction(instance, onIdentifyEffectsKey);\n}\nconst onRunEffectsKey = 'ngrxOnRunEffects';\nfunction isOnRunEffects(instance) {\n    return isFunction(instance, onRunEffectsKey);\n}\nconst onInitEffects = 'ngrxOnInitEffects';\nfunction isOnInitEffects(instance) {\n    return isFunction(instance, onInitEffects);\n}\nfunction isFunction(instance, functionName) {\n    return (instance &&\n        functionName in instance &&\n        typeof instance[functionName] === 'function');\n}\n\nconst _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\nconst USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\nconst _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\nconst ROOT_EFFECTS = new InjectionToken('@ngrx/effects Root Effects');\nconst _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\nconst FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Feature Effects');\nconst EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler');\n\nclass EffectSources extends Subject {\n    constructor(errorHandler, effectsErrorHandler) {\n        super();\n        this.errorHandler = errorHandler;\n        this.effectsErrorHandler = effectsErrorHandler;\n    }\n    addEffects(effectSourceInstance) {\n        this.next(effectSourceInstance);\n    }\n    /**\n     * @internal\n     */\n    toActions() {\n        return this.pipe(groupBy(getSourceForInstance), mergeMap((source$) => {\n            return source$.pipe(groupBy(effectsInstance));\n        }), mergeMap((source$) => {\n            const effect$ = source$.pipe(exhaustMap((sourceInstance) => {\n                return resolveEffectSource(this.errorHandler, this.effectsErrorHandler)(sourceInstance);\n            }), map((output) => {\n                reportInvalidActions(output, this.errorHandler);\n                return output.notification;\n            }), filter((notification) => notification.kind === 'N' && notification.value != null), dematerialize());\n            // start the stream with an INIT action\n            // do this only for the first Effect instance\n            const init$ = source$.pipe(take(1), filter(isOnInitEffects), map((instance) => instance.ngrxOnInitEffects()));\n            return merge(effect$, init$);\n        }));\n    }\n}\nEffectSources.ɵfac = function EffectSources_Factory(t) { return new (t || EffectSources)(ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler), ɵngcc0.ɵɵinject(EFFECTS_ERROR_HANDLER)); };\nEffectSources.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EffectSources, factory: EffectSources.ɵfac });\n/** @nocollapse */\nEffectSources.ctorParameters = () => [\n    { type: ErrorHandler },\n    { type: undefined, decorators: [{ type: Inject, args: [EFFECTS_ERROR_HANDLER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectSources, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.ErrorHandler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [EFFECTS_ERROR_HANDLER]\n            }] }]; }, null); })();\nfunction effectsInstance(sourceInstance) {\n    if (isOnIdentifyEffects(sourceInstance)) {\n        return sourceInstance.ngrxOnIdentifyEffects();\n    }\n    return '';\n}\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n    return (sourceInstance) => {\n        const mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n        if (isOnRunEffects(sourceInstance)) {\n            return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n        }\n        return mergedEffects$;\n    };\n}\n\nclass EffectsRunner {\n    constructor(effectSources, store) {\n        this.effectSources = effectSources;\n        this.store = store;\n        this.effectsSubscription = null;\n    }\n    start() {\n        if (!this.effectsSubscription) {\n            this.effectsSubscription = this.effectSources\n                .toActions()\n                .subscribe(this.store);\n        }\n    }\n    ngOnDestroy() {\n        if (this.effectsSubscription) {\n            this.effectsSubscription.unsubscribe();\n            this.effectsSubscription = null;\n        }\n    }\n}\nEffectsRunner.ɵfac = function EffectsRunner_Factory(t) { return new (t || EffectsRunner)(ɵngcc0.ɵɵinject(EffectSources), ɵngcc0.ɵɵinject(ɵngcc2.Store)); };\nEffectsRunner.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EffectsRunner, factory: EffectsRunner.ɵfac });\n/** @nocollapse */\nEffectsRunner.ctorParameters = () => [\n    { type: EffectSources },\n    { type: Store }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsRunner, [{\n        type: Injectable\n    }], function () { return [{ type: EffectSources }, { type: ɵngcc2.Store }]; }, null); })();\n\nconst ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nconst rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\nclass EffectsRootModule {\n    constructor(sources, runner, store, rootEffects, storeRootModule, storeFeatureModule, guard) {\n        this.sources = sources;\n        runner.start();\n        rootEffects.forEach((effectSourceInstance) => sources.addEffects(effectSourceInstance));\n        store.dispatch({ type: ROOT_EFFECTS_INIT });\n    }\n    addEffects(effectSourceInstance) {\n        this.sources.addEffects(effectSourceInstance);\n    }\n}\nEffectsRootModule.ɵfac = function EffectsRootModule_Factory(t) { return new (t || EffectsRootModule)(ɵngcc0.ɵɵinject(EffectSources), ɵngcc0.ɵɵinject(EffectsRunner), ɵngcc0.ɵɵinject(ɵngcc2.Store), ɵngcc0.ɵɵinject(ROOT_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc2.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc2.StoreFeatureModule, 8), ɵngcc0.ɵɵinject(_ROOT_EFFECTS_GUARD, 8)); };\nEffectsRootModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: EffectsRootModule });\nEffectsRootModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/** @nocollapse */\nEffectsRootModule.ctorParameters = () => [\n    { type: EffectSources },\n    { type: EffectsRunner },\n    { type: Store },\n    { type: Array, decorators: [{ type: Inject, args: [ROOT_EFFECTS,] }] },\n    { type: StoreRootModule, decorators: [{ type: Optional }] },\n    { type: StoreFeatureModule, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_ROOT_EFFECTS_GUARD,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsRootModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return [{ type: EffectSources }, { type: EffectsRunner }, { type: ɵngcc2.Store }, { type: Array, decorators: [{\n                type: Inject,\n                args: [ROOT_EFFECTS]\n            }] }, { type: ɵngcc2.StoreRootModule, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.StoreFeatureModule, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_ROOT_EFFECTS_GUARD]\n            }] }]; }, null); })();\n\nclass EffectsFeatureModule {\n    constructor(root, effectSourceGroups, storeRootModule, storeFeatureModule) {\n        effectSourceGroups.forEach((group) => group.forEach((effectSourceInstance) => root.addEffects(effectSourceInstance)));\n    }\n}\nEffectsFeatureModule.ɵfac = function EffectsFeatureModule_Factory(t) { return new (t || EffectsFeatureModule)(ɵngcc0.ɵɵinject(EffectsRootModule), ɵngcc0.ɵɵinject(FEATURE_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc2.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc2.StoreFeatureModule, 8)); };\nEffectsFeatureModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: EffectsFeatureModule });\nEffectsFeatureModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/** @nocollapse */\nEffectsFeatureModule.ctorParameters = () => [\n    { type: EffectsRootModule },\n    { type: Array, decorators: [{ type: Inject, args: [FEATURE_EFFECTS,] }] },\n    { type: StoreRootModule, decorators: [{ type: Optional }] },\n    { type: StoreFeatureModule, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsFeatureModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return [{ type: EffectsRootModule }, { type: Array, decorators: [{\n                type: Inject,\n                args: [FEATURE_EFFECTS]\n            }] }, { type: ɵngcc2.StoreRootModule, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.StoreFeatureModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\nclass EffectsModule {\n    static forFeature(featureEffects = []) {\n        return {\n            ngModule: EffectsFeatureModule,\n            providers: [\n                featureEffects,\n                {\n                    provide: _FEATURE_EFFECTS,\n                    multi: true,\n                    useValue: featureEffects,\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: FEATURE_EFFECTS,\n                    multi: true,\n                    useFactory: createEffects,\n                    deps: [Injector, _FEATURE_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n    static forRoot(rootEffects = []) {\n        return {\n            ngModule: EffectsRootModule,\n            providers: [\n                {\n                    provide: EFFECTS_ERROR_HANDLER,\n                    useValue: defaultEffectsErrorHandler,\n                },\n                EffectsRunner,\n                EffectSources,\n                Actions,\n                rootEffects,\n                {\n                    provide: _ROOT_EFFECTS,\n                    useValue: [rootEffects],\n                },\n                {\n                    provide: _ROOT_EFFECTS_GUARD,\n                    useFactory: _provideForRootGuard,\n                    deps: [\n                        [EffectsRunner, new Optional(), new SkipSelf()],\n                        [_ROOT_EFFECTS, new Self()],\n                    ],\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: ROOT_EFFECTS,\n                    useFactory: createEffects,\n                    deps: [Injector, _ROOT_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n}\nEffectsModule.ɵfac = function EffectsModule_Factory(t) { return new (t || EffectsModule)(); };\nEffectsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: EffectsModule });\nEffectsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\nfunction createEffects(injector, effectGroups, userProvidedEffectGroups) {\n    const mergedEffects = [];\n    for (const effectGroup of effectGroups) {\n        mergedEffects.push(...effectGroup);\n    }\n    for (const userProvidedEffectGroup of userProvidedEffectGroups) {\n        mergedEffects.push(...userProvidedEffectGroup);\n    }\n    return createEffectInstances(injector, mergedEffects);\n}\nfunction createEffectInstances(injector, effects) {\n    return effects.map((effect) => injector.get(effect));\n}\nfunction _provideForRootGuard(runner, rootEffects) {\n    // check whether any effects are actually passed\n    const hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n    if (hasEffects && runner) {\n        throw new TypeError(`EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.`);\n    }\n    return 'guarded';\n}\n\nfunction act(\n/** Allow to take either config object or project/error functions */\nconfigOrProject, errorFn) {\n    const { project, error, complete, operator, unsubscribe } = typeof configOrProject === 'function'\n        ? {\n            project: configOrProject,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            error: errorFn,\n            operator: concatMap,\n            complete: undefined,\n            unsubscribe: undefined,\n        }\n        : Object.assign(Object.assign({}, configOrProject), { operator: configOrProject.operator || concatMap });\n    return (source) => defer(() => {\n        const subject = new Subject();\n        return merge(source.pipe(operator((input, index) => defer(() => {\n            let completed = false;\n            let errored = false;\n            let projectedCount = 0;\n            return project(input, index).pipe(materialize(), map((notification) => {\n                switch (notification.kind) {\n                    case 'E':\n                        errored = true;\n                        return new Notification('N', error(notification.error, input));\n                    case 'C':\n                        completed = true;\n                        return complete\n                            ? new Notification('N', complete(projectedCount, input))\n                            : undefined;\n                    default:\n                        ++projectedCount;\n                        return notification;\n                }\n            }), filter((n) => n != null), dematerialize(), finalize(() => {\n                if (!completed && !errored && unsubscribe) {\n                    subject.next(unsubscribe(projectedCount, input));\n                }\n            }));\n        }))), subject);\n    });\n}\n\n/**\n * 'concatLatestFrom' combines the source value\n * and the last available value from a lazily evaluated Observable\n * in a new array\n */\nfunction concatLatestFrom(observablesFactory) {\n    return pipe(concatMap((value) => {\n        const observables = observablesFactory(value);\n        const observablesAsArray = Array.isArray(observables)\n            ? observables\n            : [observables];\n        return of(value).pipe(withLatestFrom(...observablesAsArray));\n    }));\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Actions, EFFECTS_ERROR_HANDLER, Effect, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, act, concatLatestFrom, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, rootEffectsInit, getSourceMetadata as ɵa, createEffects as ɵb, _provideForRootGuard as ɵc, _ROOT_EFFECTS_GUARD as ɵd, _ROOT_EFFECTS as ɵe, ROOT_EFFECTS as ɵf, _FEATURE_EFFECTS as ɵg, FEATURE_EFFECTS as ɵh };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}