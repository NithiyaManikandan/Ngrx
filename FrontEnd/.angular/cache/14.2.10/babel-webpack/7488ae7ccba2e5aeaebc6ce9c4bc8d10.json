{"ast":null,"code":"import _asyncToGenerator from \"/home/asplap1973/ngrx/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { loginStart, oneUser } from \"../state/effect.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r4.loginForm.invalid);\n  }\n}\n\nfunction LoginComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r5.loginForm.invalid);\n  }\n}\n\nexport class LoginComponent {\n  constructor(store, route) {\n    this.store = store;\n    this.route = route;\n    this.updateButton = false;\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.pattern(\"^[0-9]{5}\")])\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.id = _this.route.snapshot.paramMap.get(\"_id\");\n      console.log(_this.id);\n\n      if (_this.id) {\n        _this.updateButton = true;\n        _this.post = yield _this.store.dispatch(oneUser({\n          id: _this.id\n        }));\n\n        _this.update(_this.post);\n      }\n    })();\n  }\n\n  submit() {\n    console.log(this.loginForm.value); // const email = this.loginForm.value.email;\n    // const password = this.loginForm.value.password;\n\n    this.store.dispatch(loginStart(this.loginForm.value));\n  }\n\n  update(post) {\n    console.log(post);\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 7,\n  consts: [[1, \"userForm\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"\"], [\"type\", \"text\", \"placeholder\", \"Enter your email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Enter the password\", \"formControlName\", \"password\"], [3, \"disabled\", 4, \"ngIf\"], [3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n      i0.ɵɵtext(4, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵtemplate(7, LoginComponent_span_7_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\");\n      i0.ɵɵtemplate(9, LoginComponent_span_9_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\");\n      i0.ɵɵtemplate(15, LoginComponent_span_15_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\");\n      i0.ɵɵtemplate(17, LoginComponent_span_17_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\");\n      i0.ɵɵtemplate(19, LoginComponent_button_19_Template, 2, 1, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\");\n      i0.ɵɵtemplate(21, LoginComponent_button_21_Template, 2, 1, \"button\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.valid) && !((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.errors) && ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.valid) && !((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.errors) && ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.updateButton);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.updateButton);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".userForm[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\ninput[type=password][_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  margin-left: 43px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\nspan[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7QUFDRiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyRm9ybXtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuaW5wdXRbdHlwZSA9IHBhc3N3b3JkXXtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cbmlucHV0W3R5cGUgPSB0ZXh0XXtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBtYXJnaW4tbGVmdDogNDNweDtcbn1cblxuYnV0dG9ue1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG5zcGFue1xuICBjb2xvcjogcmVkO1xufVxuIl19 */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,gBAAnD;AAIA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,wBAApC;;;;;;;;;ICEMC;IAAgFA;IAAaA;;;;;;IAG7FA;IAAgFA;IAAiBA;;;;;;IAOjGA;IAAsFA;IAAgBA;;;;;;IAGtGA;IAAsFA;IAAoBA;;;;;;IAG1GA;IAA6DA;IAAMA;;;;;IAA3DA;;;;;;IAGRA;IAA4DA;IAAMA;;;;;IAA1DA;;;;ADdd,OAAM,MAAOC,cAAP,CAAqB;EAMzBC,YAAoBC,KAApB,EAAoDC,KAApD,EAAyE;IAArD;IAAgC;IAHpD,oBAAe,KAAf;IAIE,KAAKC,SAAL,GAAiB,IAAIT,SAAJ,CAAc;MAC7BU,KAAK,EAAE,IAAIX,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACU,QAAZ,EAAsBV,UAAU,CAACS,KAAjC,CAApB,CADsB;MAE7BE,QAAQ,EAAE,IAAIb,WAAJ,CAAgB,EAAhB,EAAoB,CAC5BE,UAAU,CAACU,QADiB,EAE5BV,UAAU,CAACY,OAAX,CAAmB,WAAnB,CAF4B,CAApB;IAFmB,CAAd,CAAjB;EAOD;;EAEKC,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACC,EAAL,GAAU,KAAI,CAACP,KAAL,CAAWQ,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,KAAjC,CAAV;MACAC,OAAO,CAACC,GAAR,CAAY,KAAI,CAACL,EAAjB;;MACA,IAAI,KAAI,CAACA,EAAT,EAAa;QACX,KAAI,CAACM,YAAL,GAAoB,IAApB;QACA,KAAI,CAACC,IAAL,SAAkB,KAAI,CAACf,KAAL,CAAWgB,QAAX,CAAoBpB,OAAO,CAAC;UAAEY,EAAE,EAAE,KAAI,CAACA;QAAX,CAAD,CAA3B,CAAlB;;QACA,KAAI,CAACS,MAAL,CAAY,KAAI,CAACF,IAAjB;MACD;IAPW;EAQb;;EAEDG,MAAM;IACJN,OAAO,CAACC,GAAR,CAAY,KAAKX,SAAL,CAAeiB,KAA3B,EADI,CAEJ;IACA;;IACA,KAAKnB,KAAL,CAAWgB,QAAX,CAAoBrB,UAAU,CAAC,KAAKO,SAAL,CAAeiB,KAAhB,CAA9B;EACD;;EAEDF,MAAM,CAACF,IAAD,EAAW;IACfH,OAAO,CAACC,GAAR,CAAYE,IAAZ;EACD;;AAnCwB;;;mBAAdjB,gBAAcD;AAAA;;;QAAdC;EAAcsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3B3B,+BAAsB,CAAtB,EAAsB,MAAtB,EAAsB,CAAtB;MACgCA;QAAA,OAAY4B,YAAZ;MAAoB,CAApB;MAC5B5B,4BAAK,CAAL,EAAK,OAAL,EAAK,CAAL;MACgBA;MAAKA;MACnBA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA,6BAAK,EAAL,EAAK,OAAL;MACSA;MAAQA;MACfA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;;;;;;;;MA1BIA;MAAAA;MAMKA;MAAAA;MAGAA;MAAAA;MAOAA;MAAAA;MAGAA;MAAAA;MAGiCA;MAAAA;MAGAA;MAAAA","names":["FormControl","FormGroup","Validators","loginStart","oneUser","i0","LoginComponent","constructor","store","route","loginForm","email","required","password","pattern","ngOnInit","id","snapshot","paramMap","get","console","log","updateButton","post","dispatch","update","submit","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/asplap1973/ngrx/FrontEnd/src/app/effects/login/login.component.ts","/home/asplap1973/ngrx/FrontEnd/src/app/effects/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"src/app/app.state\";\nimport { loginStart, oneUser } from \"../state/effect.action\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  data: any;\n  updateButton = false;\n  id: any;\n  post: any;\n  constructor(private store: Store<AppState>, private route: ActivatedRoute) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9]{5}\"),\n      ]),\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.id = this.route.snapshot.paramMap.get(\"_id\");\n    console.log(this.id);\n    if (this.id) {\n      this.updateButton = true;\n      this.post = await this.store.dispatch(oneUser({ id: this.id }));\n      this.update(this.post)\n    }\n  }\n\n  submit() {\n    console.log(this.loginForm.value);\n    // const email = this.loginForm.value.email;\n    // const password = this.loginForm.value.password;\n    this.store.dispatch(loginStart(this.loginForm.value));\n  }\n\n  update(post : any) {\n    console.log(post);\n  }\n}\n","<div class=\"userForm\">\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n    <div>\n      <label for=\"\">Email</label>\n      <input type=\"text\" placeholder=\"Enter your email\" formControlName=\"email\">\n    </div>\n    <div>\n      <span *ngIf=\"loginForm.get('email')?.valid && !loginForm.get('email')?.touched\">Invalid email</span>\n    </div>\n    <div>\n      <span *ngIf=\"loginForm.get('email')?.errors && loginForm.get('email')?.touched\">Email is required</span>\n    </div>\n    <div>\n      <label>Password</label>\n      <input type=\"password\" placeholder=\"Enter the password\" formControlName=\"password\">\n    </div>\n    <div>\n      <span *ngIf=\"loginForm.get('password')?.valid && !loginForm.get('password')?.touched\">Invalid password</span>\n    </div>\n    <div>\n      <span *ngIf=\"loginForm.get('password')?.errors && loginForm.get('password')?.touched\">password is required</span>\n    </div>\n    <div>\n      <button [disabled]=\"loginForm.invalid\" *ngIf=\"!updateButton\">Submit</button>\n    </div>\n    <div>\n      <button [disabled]=\"loginForm.invalid\" *ngIf=\"updateButton\">Update</button>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module"}