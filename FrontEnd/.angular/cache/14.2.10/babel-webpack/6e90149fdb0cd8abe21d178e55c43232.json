{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { deleteStart, loadPost, postStart, updateStart } from \"../state/post.action\";\nimport { getPosts, getPostById } from \"../state/post.selector\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nconst _c0 = function (a1) {\n  return [\"/post\", a1];\n};\n\nfunction PostComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"\\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 3);\n    i0.ɵɵtext(12, \"Update \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\u00A0 \");\n    i0.ɵɵelementStart(14, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function PostComponent_tr_22_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const post_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onDelete(post_r2._id));\n    });\n    i0.ɵɵtext(15, \" Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"\\u00A0 \");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const post_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2._id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(post_r2.email);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(post_r2.password);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, post_r2._id));\n  }\n}\n\nfunction PostComponent_div_24_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.loginForm.invalid);\n  }\n}\n\nfunction PostComponent_div_24_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r6.loginForm.invalid);\n  }\n}\n\nfunction PostComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5)(2, \"div\")(3, \"h3\");\n    i0.ɵɵtext(4, \"Add user\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function PostComponent_div_24_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.submit());\n    });\n    i0.ɵɵelementStart(6, \"div\")(7, \"label\", 7);\n    i0.ɵɵtext(8, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n    i0.ɵɵtext(12, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\");\n    i0.ɵɵtemplate(15, PostComponent_div_24_button_15_Template, 2, 1, \"button\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\");\n    i0.ɵɵtemplate(17, PostComponent_div_24_button_17_Template, 2, 1, \"button\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.loginForm);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.postbutton);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.updatebutton);\n  }\n}\n\nconst _c1 = function () {\n  return [\"../addUser\"];\n};\n\nexport class PostComponent {\n  constructor(store, route) {\n    this.store = store;\n    this.route = route;\n    this.updatebutton = false;\n    this.postbutton = false;\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.pattern(\"^[0-9]{5}\")])\n    });\n  }\n\n  ngOnInit() {\n    this.store.select(getPostById).subscribe(post => {\n      if (post) {\n        this.id = post._id;\n        console.log(post._id, this.id);\n        this.loginForm.patchValue({\n          email: post?.email,\n          password: post?.password\n        });\n        this.updateData(post);\n      } else {\n        console.log(\"cncccj\");\n      }\n    });\n    this.store.dispatch(loadPost());\n    this.posts = this.store.select(getPosts);\n  }\n\n  submit() {\n    if (this.id) {\n      this.store.dispatch(updateStart({\n        post: this.loginForm.value,\n        id: this.id\n      }));\n      this.posts = this.store.select(getPosts);\n    } else {\n      this.store.dispatch(postStart(this.loginForm.value));\n      this.posts = this.store.select(getPosts);\n    }\n  }\n\n  onDelete(id) {\n    this.store.dispatch(deleteStart({\n      userId: id\n    }));\n    this.posts = this.store.select(getPosts);\n  }\n\n  submitForm() {\n    console.log(this.loginForm.value);\n    this.store.dispatch(postStart(this.loginForm.value));\n    this.posts = this.store.select(getPosts);\n  }\n\n  updateData(post) {\n    this.updatebutton = true;\n  }\n\n  postUser() {\n    this.postbutton = true;\n  }\n\n}\n\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  decls: 25,\n  vars: 6,\n  consts: [[3, \"routerLink\", \"click\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"routerLink\"], [3, \"click\"], [1, \"userForm\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"\"], [\"type\", \"text\", \"placeholder\", \"Enter your email\", \"formControlName\", \"email\"], [\"type\", \"password\", \"placeholder\", \"Enter the password\", \"formControlName\", \"password\"], [3, \"disabled\", 4, \"ngIf\"], [3, \"disabled\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function PostComponent_Template_button_click_1_listener() {\n        return ctx.postUser();\n      });\n      i0.ɵɵtext(2, \"Add user\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(3, \"\\u00A0\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"div\")(6, \"h3\");\n      i0.ɵɵtext(7, \"post list\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"table\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\u00A0\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\u00A0\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\u00A0\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Action\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(22, PostComponent_tr_22_Template, 17, 6, \"tr\", 1);\n      i0.ɵɵpipe(23, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(24, PostComponent_div_24_Template, 18, 3, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c1));\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(23, 3, ctx.posts));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.updatebutton || ctx.postbutton);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i3.AsyncPipe],\n  styles: [\".userForm[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\ninput[type=password][_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  margin-left: 43px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\nspan[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQUNKOztBQUVFO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVFO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUU7RUFDRSxnQkFBQTtBQUNKOztBQUVFO0VBQ0UsVUFBQTtBQUNKIiwiZmlsZSI6InBvc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlckZvcm17XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgfVxuICBcbiAgaW5wdXRbdHlwZSA9IHBhc3N3b3JkXXtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICB9XG4gIFxuICBpbnB1dFt0eXBlID0gdGV4dF17XG4gICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiA0M3B4O1xuICB9XG4gIFxuICBidXR0b257XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgfVxuICBcbiAgc3BhbntcbiAgICBjb2xvcjogcmVkO1xuICB9XG4gICJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","deleteStart","loadPost","postStart","updateStart","getPosts","getPostById","i0","PostComponent","constructor","store","route","loginForm","email","required","password","pattern","ngOnInit","select","subscribe","post","id","_id","console","log","patchValue","updateData","dispatch","posts","submit","value","onDelete","userId","submitForm","updatebutton","postUser","postbutton","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/asplap1973/ngrx/FrontEnd/src/app/posts/post/post.component.ts","/home/asplap1973/ngrx/FrontEnd/src/app/posts/post/post.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, NgForm, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { AppState } from \"src/app/app.state\";\nimport { Post } from \"src/app/models/post.model\";\nimport {\n  deleteStart,\n  loadPost,\n  postStart,\n  updateStart,\n} from \"../state/post.action\";\nimport { getPosts, getPostById } from \"../state/post.selector\";\n\n@Component({\n  selector: \"app-post\",\n  templateUrl: \"./post.component.html\",\n  styleUrls: [\"./post.component.scss\"],\n})\nexport class PostComponent implements OnInit {\n  posts!: Observable<Post[]>;\n  loginForm!: FormGroup;\n  id: any;\n  updatebutton = false;\n  postbutton = false;\n  constructor(private store: Store<AppState>, private route: ActivatedRoute) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9]{5}\"),\n      ]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.store.select(getPostById).subscribe((post) => {\n      if(post){\n        this.id = post._id\n        console.log(post._id,this.id);\n        this.loginForm.patchValue({\n          email: post?.email,\n          password: post?.password,\n        });\n        this.updateData(post);\n      }\n      else{\n        console.log(\"cncccj\");\n        \n      }\n    });\n    this.store.dispatch(loadPost());\n    this.posts = this.store.select(getPosts);\n  }\n\n  submit() {\n    if (this.id) {\n      this.store.dispatch(updateStart({post :this.loginForm.value , id : this.id}));\n      this.posts = this.store.select(getPosts);\n    } else {\n      this.store.dispatch(postStart(this.loginForm.value));\n      this.posts = this.store.select(getPosts);\n    }\n  }\n\n  onDelete(id: any) {\n    this.store.dispatch(deleteStart({ userId: id }));\n    this.posts = this.store.select(getPosts);\n  }\n\n  submitForm() {\n    console.log(this.loginForm.value);\n\n    this.store.dispatch(postStart(this.loginForm.value));\n    this.posts = this.store.select(getPosts);\n  }\n\n  updateData(post:any ) {\n    this.updatebutton = true;\n  }\n  postUser() {\n    this.postbutton = true;\n  }\n}\n","<div>\n  <button [routerLink]=\"['../addUser']\" (click)=\"postUser()\">Add user</button>&nbsp;\n</div>\n\n<div>\n  <div>\n    <h3>post list</h3>\n  </div>\n  <div>\n    <table>\n      <tr>\n        <th>ID</th>&nbsp;&nbsp;&nbsp;\n        <th>Email</th>&nbsp;&nbsp;&nbsp;\n        <th>Password</th>&nbsp;&nbsp;&nbsp;\n        <th>Action</th>\n      </tr>\n      <tr *ngFor=\"let post of posts | async\">\n        <td>{{post._id}}</td>&nbsp;&nbsp;&nbsp;\n        <td>{{post.email}}</td>&nbsp;&nbsp;&nbsp;\n        <td>{{post.password}}</td>&nbsp;&nbsp;&nbsp;\n        <td>\n          <button [routerLink]=\"['/post',post._id]\">Update </button>&nbsp;\n          <button (click)=\"onDelete(post._id)\"> Delete </button>&nbsp;\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div *ngIf=\" updatebutton ||  postbutton\">\n    <div class=\"userForm\">\n      <div>\n        <h3>Add user</h3>\n      </div>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n        <div>\n          <label for=\"\">Email</label>\n          <input type=\"text\" placeholder=\"Enter your email\" formControlName=\"email\">\n        </div>\n        <div>\n          <label>Password</label>\n          <input type=\"password\" placeholder=\"Enter the password\" formControlName=\"password\">\n        </div>\n        <div>\n          <button [disabled]=\"loginForm.invalid\" *ngIf=\"postbutton\">Submit</button>\n        </div>\n        <div>\n          <button [disabled]=\"loginForm.invalid\" *ngIf=\"updatebutton\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module"}