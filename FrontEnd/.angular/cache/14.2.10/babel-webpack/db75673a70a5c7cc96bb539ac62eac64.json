{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { loadPost, loginStart } from \"../state/effect.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction LoginComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class LoginComponent {\n  constructor(store) {\n    this.store = store;\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.pattern(\"^[0-9]{5}\")])\n    });\n  }\n\n  ngOnInit() {\n    this.getAllUser();\n  }\n\n  submit() {\n    // console.log(this.loginForm.value);\n    const email = this.loginForm.value.email;\n    const password = this.loginForm.value.password;\n    this.store.dispatch(loginStart({\n      email,\n      password\n    }));\n  }\n\n  getAllUser() {\n    this.store.dispatch(loadPost());\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 28,\n  vars: 9,\n  consts: [[1, \"userForm\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"\"], [\"type\", \"text\", \"placeholder\", \"Enter your email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Enter the password\", \"formControlName\", \"password\"], [3, \"disabled\"], [3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n      i0.ɵɵtext(4, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵtemplate(7, LoginComponent_span_7_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\");\n      i0.ɵɵtemplate(9, LoginComponent_span_9_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\");\n      i0.ɵɵtemplate(15, LoginComponent_span_15_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\");\n      i0.ɵɵtemplate(17, LoginComponent_span_17_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"button\", 6);\n      i0.ɵɵtext(20, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\")(22, \"div\")(23, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_23_listener() {\n        return ctx.getAllUser();\n      });\n      i0.ɵɵtext(24, \"All User\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\");\n      i0.ɵɵtext(26);\n      i0.ɵɵpipe(27, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.valid) && !((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.errors) && ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.valid) && !((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.errors) && ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(27, 7, ctx.data), \" \");\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i2.AsyncPipe],\n  styles: [\".userForm[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\ninput[type=password][_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  margin-left: 43px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\nspan[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7QUFDRiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyRm9ybXtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuaW5wdXRbdHlwZSA9IHBhc3N3b3JkXXtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cbmlucHV0W3R5cGUgPSB0ZXh0XXtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBtYXJnaW4tbGVmdDogNDNweDtcbn1cblxuYnV0dG9ue1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG5zcGFue1xuICBjb2xvcjogcmVkO1xufVxuIl19 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,gBAAnD;AAGA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,wBAArC;;;;;;;;ICGMC;IAAgFA;IAAaA;;;;;;IAG7FA;IAAgFA;IAAiBA;;;;;;IAOjGA;IAAsFA;IAAgBA;;;;;;IAGtGA;IAAsFA;IAAoBA;;;;ADThH,OAAM,MAAOC,cAAP,CAAqB;EAGzBC,YAAoBC,KAApB,EAAyC;IAArB;IAClB,KAAKC,SAAL,GAAiB,IAAIR,SAAJ,CAAc;MAC7BS,KAAK,EAAE,IAAIV,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACS,QAAZ,EAAsBT,UAAU,CAACQ,KAAjC,CAApB,CADsB;MAE7BE,QAAQ,EAAE,IAAIZ,WAAJ,CAAgB,EAAhB,EAAoB,CAC5BE,UAAU,CAACS,QADiB,EAE5BT,UAAU,CAACW,OAAX,CAAmB,WAAnB,CAF4B,CAApB;IAFmB,CAAd,CAAjB;EAOD;;EAEDC,QAAQ;IACN,KAAKC,UAAL;EACD;;EAEDC,MAAM;IACJ;IACA,MAAMN,KAAK,GAAG,KAAKD,SAAL,CAAeQ,KAAf,CAAqBP,KAAnC;IACA,MAAME,QAAQ,GAAG,KAAKH,SAAL,CAAeQ,KAAf,CAAqBL,QAAtC;IACA,KAAKJ,KAAL,CAAWU,QAAX,CAAoBd,UAAU,CAAC;MAACM,KAAD;MAAOE;IAAP,CAAD,CAA9B;EACD;;EAGDG,UAAU;IACP,KAAKP,KAAL,CAAWU,QAAX,CAAoBf,QAAQ,EAA5B;EACF;;AA3BwB;;;mBAAdG,gBAAcD;AAAA;;;QAAdC;EAAca;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BlB,+BAAsB,CAAtB,EAAsB,MAAtB,EAAsB,CAAtB;MACgCA;QAAA,OAAYmB,YAAZ;MAAoB,CAApB;MAC5BnB,4BAAK,CAAL,EAAK,OAAL,EAAK,CAAL;MACgBA;MAAKA;MACnBA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA,6BAAK,EAAL,EAAK,OAAL;MACSA;MAAQA;MACfA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA,6BAAK,EAAL,EAAK,QAAL,EAAK,CAAL;MACyCA;MAAMA;MAGjDA,6BAAK,EAAL,EAAK,KAAL,EAAK,EAAL,EAAK,QAAL,EAAK,CAAL;MAEYA;QAAA,OAASmB,gBAAT;MAAqB,CAArB;MAAuBnB;MAAQA;MAEzCA;MACEA;;MACFA;;;;;;;;MA/BIA;MAAAA;MAMKA;MAAAA;MAGAA;MAAAA;MAOAA;MAAAA;MAGAA;MAAAA;MAGCA;MAAAA;MAQRA;MAAAA","names":["FormControl","FormGroup","Validators","loadPost","loginStart","i0","LoginComponent","constructor","store","loginForm","email","required","password","pattern","ngOnInit","getAllUser","submit","value","dispatch","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/asplap1973/ngrx/FrontEnd/src/app/effects/login/login.component.ts","/home/asplap1973/ngrx/FrontEnd/src/app/effects/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"src/app/app.state\";\nimport { loadPost, loginStart } from \"../state/effect.action\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  data : any\n  constructor(private store:Store<AppState>) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9]{5}\"),\n      ]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.getAllUser()\n  }\n\n  submit() {\n    // console.log(this.loginForm.value);\n    const email = this.loginForm.value.email;\n    const password = this.loginForm.value.password;\n    this.store.dispatch(loginStart({email,password                                                                                                                                                                                                                                                                                                                                                                                                   }))\n  }\n\n\n  getAllUser(){\n     this.store.dispatch(loadPost())\n  }\n}\n","<div class=\"userForm\">\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n    <div>\n      <label for=\"\">Email</label>\n      <input type=\"text\" placeholder=\"Enter your email\" formControlName=\"email\">\n    </div>\n    <div>\n      <span *ngIf=\"loginForm.get('email')?.valid && !loginForm.get('email')?.touched\">Invalid email</span>\n    </div>\n    <div>\n      <span *ngIf=\"loginForm.get('email')?.errors && loginForm.get('email')?.touched\">Email is required</span>\n    </div>\n    <div>\n      <label>Password</label>\n      <input type=\"password\" placeholder=\"Enter the password\" formControlName=\"password\">\n    </div>\n    <div>\n      <span *ngIf=\"loginForm.get('password')?.valid && !loginForm.get('password')?.touched\">Invalid password</span>\n    </div>\n    <div>\n      <span *ngIf=\"loginForm.get('password')?.errors && loginForm.get('password')?.touched\">password is required</span>\n    </div>\n    <div>\n      <button [disabled]=\"loginForm.invalid\">Submit</button>\n    </div>\n  </form>\n  <div>\n    <div>\n      <button (click)=\"getAllUser()\">All User</button>\n    </div>\n    <div>\n      {{data | async}}\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}